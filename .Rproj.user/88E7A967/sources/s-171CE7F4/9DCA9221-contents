---
title: "Homework 4: Babynames"
subtitle: "SDS 192"
author: "Kathleen Hablutzel"
date: "`r format(Sys.Date(), '%B %e, %Y')`"
output: 
  html_document:
    toc: true
    toc_depth: 2
    toc_float: true
    fig_width: 7
    fig_height: 6
    fig_caption: true
    df_print: paged
    code_folding: hide
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  message = FALSE
)
library(tidyverse)
library(sds192)
library(babynames)
library(patchwork)
```

## Problem 1

First, I filtered the babynames data for data related to the name Jessie from 1930-2012. I calculated the percent of baby girls named Jessie in each year.

```{r Jessie_data}
j_data <- babynames %>%
  filter(name == "Jessie", year >= 1930, year <= 2012) %>%
  group_by(year) %>%
  summarize(total = sum(n),
            girls = sum(ifelse(sex == "F", n, 0)),
            pct_girls = girls / total)
```

Next, I calculated the most unisex year and saved its coordinates.

```{r calc_most_unisex_year}
most_unisex_year <- j_data %>%
  mutate(diff_50 = abs(pct_girls - 0.5)) %>%
  arrange(diff_50) %>%
  head(1)

most_unisex_year_x <- most_unisex_year[[1, 1]]
most_unisex_year_y <- most_unisex_year[[1, 4]]
```

Finally, I plotted the gender percentages over time, and I added annotations to match the example graphs.

```{r plot_Jessie, fig.width = 4, fig.height = 3}
j_plot <- ggplot(data = j_data, aes(x = year, y = pct_girls)) +
  geom_area(fill = "#E1AEA1") + # color from PowerPoint color picker tool
  geom_line(color = "black") +
  geom_text(x = 1995, y = 0.8,
           label = "BOYS",
           color = "white",
           family = "Century Gothic",
           size = 8) +
  geom_text(x = 1995, y = 0.2,
           label = "GIRLS",
           color = "white",
           family = "Century Gothic",
           size = 8) +
  geom_segment(x = most_unisex_year_x, y = most_unisex_year_y,
           xend = 1940, yend = most_unisex_year_y) +
  geom_segment(x = 1940, y = most_unisex_year_y,
           xend = 1940, yend = 0.42) +
  geom_text(x = 1935, y = 0.25,
           label = "Most\nunisex year",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 7,
           hjust = 0,
           lineheight = 0.95) +
  geom_point(x = most_unisex_year_x, y = most_unisex_year_y,
           fill = "white",
           color = "black",
           size = 5,
           shape = 21) + # to get the outline
  labs(title = "1. Jessie") +
  scale_x_continuous(name = NULL,
                    breaks = c(1940, 1960, 1980, 2000),
                    minor_breaks = NULL,
                    labels = c("1940", "'60", "'80", "2000"),
                    limits = c(1930, 2012),
                    expand = c(0, 0)) +
  scale_y_continuous(name = NULL,
                     breaks = c(0, 0.5, 1),
                     minor_breaks = NULL,
                     labels = c("0%", "50%", "100%"),
                     limits = c(0, 1),
                     expand = c(0, 0)) +
  theme(text = element_text(family = "Century Gothic", size = 24, color = "black"),
        plot.title = element_text(face = "bold", size = 23),
        panel.background = element_rect(fill = "#9BBBCF"), # color also from PowerPoint color picker tool
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        axis.ticks.length.x = unit(8, "pt"),
        axis.ticks.length.y = unit(0, "pt"),
        axis.text = element_text(color = "black"),
        axis.text.x = element_text(margin = margin(6, 0, 0, 0)))

j_plot
```

## Problem 2

#### Part 1: Data Wrangling

For Problem 2, I calculated the percent of baby girls of a given name in a given year for the entire babynames data set from 1930-2012. I dropped the dataset column for number of girls per year to decrease the size of my dataframe.

```{r girl_pcent_all_names}
all_data <- babynames %>%
  filter(year >= 1930, year <= 2012) %>%
  group_by(year, name) %>%
  summarize(total = sum(n),
            girls = sum(ifelse(sex == "F", n, 0)),
            pct_girls = girls / total) %>%
  select(-girls)
```

Then, I ranked the names by mean squared error from the 50/50 line to determine the most unisex names. I only included names with some consistent popularity, as determined by appearing in at least 75/83 years of the data and accounting for at least 9000 births. I received the correct 35 names among the top 45 names I computed, with mostly the correct order.

```{r rank_names}
errors_data <- all_data %>%
  mutate(error_sq = (pct_girls - 0.5) ^ 2) %>%
  group_by(name) %>%
  summarize(mean_sq_error = mean(error_sq, na.rm = TRUE),
            total = sum(total),
            num_years = n()) %>%
  arrange(mean_sq_error) %>%
  filter(total > 9000, num_years >= 75, name != "Unknown") %>%
  head(45)
```

Then, I created a column with a string of rank and name, to be used as plot titles (such as "1. Jessie"),

```{r create_titles}
rankings <- errors_data %>%
  rownames_to_column() %>%
  rename(rank = rowname) %>%
  mutate(rank_name = paste(rank, ". ", name, sep = "")) %>%
  select(-mean_sq_error, -total, -num_years)
```

I added these rankings as a column in my dataset.
```{r rank_data}
ranked_data <- rankings %>%
  left_join(all_data, by = c("name" = "name"))
```

I also stored a vector of the 45 names I calculated, similar to the "actual_names" vector provided in the assignment description.

```{r my_names}
my_names <- rankings[[2]]
```

For reference (and later use), here was the vector of actual names:

```{r actual_names}
actual_names <- c("Jessie", "Marion", "Jackie", "Alva", "Ollie",
                  "Jody", "Cleo", "Kerry", "Frankie", "Guadalupe", 
                  "Carey", "Tommie", "Angel", "Hollis", "Sammie",
                  "Jamie", "Kris", "Robbie", "Tracy", "Merrill", 
                  "Noel", "Rene", "Johnnie", "Ariel", "Jan", 
                  "Devon", "Cruz", "Michel", "Gale", "Robin", 
                  "Dorian", "Casey", "Dana", "Kim", "Shannon")
```

#### Part 2: Plotting all 45 names

I began with creating a function which would generate a plot for any given name using my dataset.

```{r plot_function}
plot_name <- function(data = ranked_data, this_name = "Jessie") {
  # filter data for this name only
  nameData <- data %>%
    filter(name == this_name)
  
  # isolate ranked name for plot title
  ranked_name_text <- nameData[[1, 3]]

  # calculate the x and y of the most unisex year (for dot)
  most_unisex_year <- nameData %>%
    mutate(diff_50 = abs(pct_girls - 0.5)) %>%
    arrange(diff_50) %>%
    head(1)
  most_unisex_year_x <- most_unisex_year[[1, 4]]
  most_unisex_year_y <- most_unisex_year[[1, 6]]
  
  # fill depends on whether name is in vector of actual names from the article
  this_fill <- ifelse(this_name %in% actual_names, "#E1AEA1", "black")
  
  # create the plot
  name_plot <- ggplot(data = nameData, aes(x = year, y = pct_girls)) +
    geom_area(fill = this_fill) + # color from PowerPoint color picker tool
    geom_line(color = "black") +
    geom_point(x = most_unisex_year_x, y = most_unisex_year_y,
               fill = "white",
               color = "black",
               size = 1,
               shape = 21) + # to get the outline
    labs(title = ranked_name_text) +
    scale_x_continuous(name = NULL,
                       breaks = c(1940, 1960, 1980, 2000),
                       minor_breaks = NULL,
                       labels = c("1940", "'60", "'80", "2000"),
                       limits = c(1930, 2012),
                       expand = c(0, 0)) +
    scale_y_continuous(name = NULL,
                       breaks = c(0, 0.5, 1),
                       minor_breaks = NULL,
                       labels = c("0%", "50%", "100%"),
                       limits = c(0, 1),
                       expand = c(0, 0)) +
    theme(text = element_text(family = "Century Gothic", size = 6, color = "black"),
          plot.title = element_text(face = "bold"),
          panel.background = element_rect(fill = "#9BBBCF"),
          panel.grid.major = element_blank(), 
          panel.grid.minor = element_blank(),
          axis.ticks.length.y = unit(0, "pt"),
          axis.text = element_text(color = "black"))
  
  # need name's rank below
  rank_name <- rank(this_name)
  
  # only leftmost plots in a row have y-axes
  has_y_axis <- ((rank_name %% 7) == 1)
  if(!has_y_axis) {
    name_plot <- name_plot +
      theme(axis.text.y = element_blank())
  }
  
  return(name_plot)
}
```

To do so, I also needed a function which returned an integer for a name's rank. I used this to determine which plots needed y-axes and remove the superfluous ones. I also used the rank function later to annotate specific graphs.

```{r name_rank_func}
rank <- function(this_name = "Jessie") {
  # find which number plot is the plot of this name
  name_row <- ranked_data %>%
    filter(name == this_name) %>%
    select(rank) %>%
    mutate(rank = as.numeric(rank)) %>%
    head(1)

  return(name_row[[1]])
}
```

Once I had a function to generate plots for each name, I used the map function to create a list of plots for all 45 names.

```{r all_name_plots}
all_name_plots <- map(my_names, data = ranked_data, plot_name)
```

Then, I used the patchwork package to display the plots in one graphic. (Using facet_wrap() was more ugly.)

```{r create_display_plots}
all_plots <- wrap_plots(all_name_plots, ncol = 7)
```

Finally, I added some name-specific annotations to the graphic. Unfortunately, they're all really small, because the plots are really small. Also, for some of these annotations, I needed to know a specific gender percentage for a given year, so I created a function to return this value:
```{r pct_in_year}
find_pct <- function(this_year, this_name, data = ranked_data) {
  this_row <- data %>%
    filter(year == this_year, name == this_name)
  
  return(this_row[[6]])
}
```

For Jessie, I added the original annotations, but downsized.
```{r Jessie_annotate}
# find which plot is the Jessie plot
j_rank <- rank("Jessie")

# add to plot
all_plots[[j_rank]] <- all_plots[[j_rank]] +
  # boys/girls labels
  geom_text(x = 1995, y = 0.8,
           label = "BOYS",
           color = "white",
           family = "Century Gothic",
           size = 1) +
  geom_text(x = 1995, y = 0.2,
           label = "GIRLS",
           color = "white",
           family = "Century Gothic",
           size = 1) +
  # label for most unisex year
  geom_segment(x = most_unisex_year_x, y = most_unisex_year_y,
           xend = 1940, yend = most_unisex_year_y) +
  geom_segment(x = 1940, y = most_unisex_year_y,
           xend = 1940, yend = 0.4) +
  geom_text(x = 1935, y = 0.25,
           label = "Most\nunisex year",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 1,
           hjust = 0)
```

For Marion, I noted when Marion Jones won gold in the Olympics (2000).
```{r Marion_annotate}
# find which plot is the Marion plot
m_rank <- rank("Marion")

# add to plot
all_plots[[m_rank]] <- all_plots[[m_rank]] +
    geom_segment(x = 2000, y = find_pct(this_year = 2000, this_name = "Marion"),
           xend = 2000, yend = 0.25) +
    geom_segment(x = 2000, y = 0.25,
           xend = 1990, yend = 0.25) +
    geom_text(x = 1955, y = 0.25,
           label = "Marion Jones wins\ngold in Olympics",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 1,
           hjust = 0)
```

For Jackie, I noted when Jackie Robinson joined the major league (1946).

```{r Jackie_annotate}
# find which plot is the Jackie plot
j_rank <- rank("Jackie")

# add to plot
all_plots[[j_rank]] <- all_plots[[j_rank]] +
    geom_segment(x = 1946, y = 0.65,
           xend = 1946, yend = find_pct(this_year = 1946, this_name = "Jackie")) +
    geom_text(x = 1935, y = 0.8,
           label = "Jackie Robinson to\nmajor league",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 1,
           hjust = 0)
```

For Jamie, I noted when Jamie Hunter Cartwright appeared on Bonanza (1971).

```{r Jamie_annotate}
# find which plot is the Jamie plot
j_rank <- rank("Jamie")

# store percent girls for 1971, because it's used three times
pct_1971 <- find_pct(this_year = 1971, this_name = "Jamie")

# add to plot
all_plots[[j_rank]] <- all_plots[[j_rank]] +
    geom_segment(x = 1971, y = pct_1971,
           xend = 1960, yend = pct_1971) +
    geom_segment(x = 1960, y = pct_1971,
           xend = 1960, yend = 0.48) + 
    geom_text(x = 1935, y = 0.25,
           label = "Jamie Hunter Cartwright\nappears on Bonanza",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 1,
           hjust = 0)
```

And finally, for Ariel, I noted when Disney released The Little Mermaid (1989).

```{r Ariel_annotate}
# find which plot is the Ariel plot
a_rank <- rank("Ariel")

# store percent girls for 1989, because it's used three times
pct_1989 <- find_pct(this_year = 1989, this_name = "Ariel")

# add to plot
all_plots[[a_rank]] <- all_plots[[a_rank]] +
    geom_segment(x = 1989, y = pct_1989,
           xend = 1970, yend = pct_1989) +
    geom_segment(x = 1970, y = pct_1989,
           xend = 1970, yend = 0.5) + 
    geom_text(x = 1935, y = 0.25,
           label = "The Little Mermaid\nsways Ariel towards girls",
           color = "black",
           family = "Century Gothic",
           fontface = "italic",
           size = 1,
           hjust = 0)
```

Let's see the final graphic:
```{r final_output, out.width = "100%", fig.align = "center"}
all_plots
```

And that's all, folks!

## Word count

```{r word_count, message=FALSE, echo=FALSE}
sds192::text_stats()
```

